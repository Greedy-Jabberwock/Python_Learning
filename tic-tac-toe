# write your code here
def make_grid():
    field_list = [['_', '_', '_'], ['_', '_', '_'], ['_', '_', '_']]
    return field_list


def print_grid(field):
    header = '-' * 9
    border = '|'
    i = 0
    print(header)
    while i < len(field):
        line = ' '.join(field[i])
        print(f"{border} {line} {border}")
        i += 1
    print(header)


def count_char(field, char):
    counter = 0
    for item in field:
        counter += item.count(char)
    return counter


def win_check(field):
    count_x = count_char(field, 'X')
    count_o = count_char(field, 'O')
    count__ = count_char(field, '_')
    check_x = three_in_raw(field, 'X')
    check_o = three_in_raw(field, 'O')
    draw_condition = count__ == 0 and (count_x > 3 or count_o > 3)
    if check_x:
        print('X wins')
        return True
    if check_o:
        print('O wins')
        return True
    if draw_condition:
        print('Draw')
        return True
    if count__ != 0 and not (check_x and check_o):
        return False


def three_in_raw(field, char):
    diagonal_left = 0
    diagonal_right = 0
    for raw in field:
        if raw.count(char) == 3:
            return True
    j = 2
    for i in range(len(field)):
        if field[0][i] == field[1][i] == field[2][i] and field[0][i] == char:
            return True
        if field[i][i] == char:
            diagonal_left += 1
            if diagonal_left == 3:
                return True
        else:
            diagonal_left = 0
        if field[i][j] == char:
            j -= 1
            diagonal_right += 1
            if diagonal_right == 3:
                return True
        else:
            diagonal_right = 0
    return False


def make_move(field, player):
    while True:
        try:
            command = input("Enter the coordinates: ").split()
            coordinates = [int(x) for x in command]
            if coordinates[0] < 1 or coordinates[0] > 3:
                print("Coordinates should be from 1 to 3!")
                continue
            if coordinates[1] < 1 or coordinates[1] > 3:
                print("Coordinates should be from 1 to 3!")
                continue
        except:
            print("You should enter numbers!")
            continue
        if field[coordinates[0] - 1][coordinates[1] - 1] in 'XO':
            print("This cell is occupied! Choose another one!")
            continue
        else:
            field[coordinates[0] - 1][coordinates[1] - 1] = 'X' if player == 'X' else 'O'
            break


def main():
    grid = make_grid()
    print_grid(grid)
    while True:
        if win_check(grid):
            break
        make_move(grid, 'X')
        print_grid(grid)
        if win_check(grid):
            break
        make_move(grid, 'O')
        print_grid(grid)


main()
